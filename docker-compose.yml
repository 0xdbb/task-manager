services:
  db:
    image: "postgis/postgis:15-3.4-alpine"
    container_name: postgres-db
    environment:
      POSTGRES_USER: ${PGUSER}
      POSTGRES_PASSWORD: ${PGPASSWORD}
      POSTGRES_DB: ${PGDATABASE}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  rabbitmq:
      image: rabbitmq:4.0-management  # Includes the management UI
      container_name: rabbitmq
      restart: unless-stopped
      ports:
        - "5672:5672"   # AMQP protocol port
        - "15672:15672" # Management UI
      environment:
        RABBITMQ_DEFAULT_USER: guest
        RABBITMQ_DEFAULT_PASS: guest
      healthcheck:
        test: ["CMD", "rabbitmqctl", "status"]
        interval: 10s
        timeout: 5s
        retries: 5
      volumes:
        - rabbitmq_data:/var/lib/rabbitmq
        - rabbitmq_log:/var/log/rabbitmq

#  api:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    depends_on:
#      - db
#    ports:
#      - "8080:8080"
#    volumes:
#      - appdata:/app
#      - ./wait-for.sh:/app/wait-for.sh
#      - ./app.env:/app/app.env
#      - ./.env:/app/.env
#    environment:
#      - DATABASE_URL=postgresql://${PGUSER}:${PGPASSWORD}@db:5432/${PGDATABASE}?sslmode=disable
#    entrypoint: [ "/app/wait-for.sh", "db:5432", "--timeout=400", "--", "/app/start.sh" ]
#    command: [ "/app/main" ]

volumes:
  pgdata:
  rabbitmq_data:
  rabbitmq_log:
# appdata:
