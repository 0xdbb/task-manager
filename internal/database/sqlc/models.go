// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package database

import (
	"time"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type Notification struct {
	ID        uuid.UUID   `json:"id"`
	UserID    pgtype.UUID `json:"user_id"`
	TaskID    pgtype.UUID `json:"task_id"`
	Message   pgtype.Text `json:"message"`
	Read      pgtype.Bool `json:"read"`
	CreatedAt time.Time   `json:"created_at"`
}

type Session struct {
	ID           uuid.UUID `json:"id"`
	UserID       uuid.UUID `json:"user_id"`
	RefreshToken string    `json:"refresh_token"`
	UserAgent    string    `json:"user_agent"`
	ClientIp     string    `json:"client_ip"`
	IsBlocked    bool      `json:"is_blocked"`
	ExpiresAt    time.Time `json:"expires_at"`
	CreatedAt    time.Time `json:"created_at"`
}

type Task struct {
	ID        uuid.UUID   `json:"id"`
	UserID    uuid.UUID   `json:"user_id"`
	Type      string      `json:"type"`
	Payload   string      `json:"payload"`
	Status    pgtype.Text `json:"status"`
	Result    pgtype.Text `json:"result"`
	DueTime   time.Time   `json:"due_time"`
	CreatedAt time.Time   `json:"created_at"`
	UpdatedAt time.Time   `json:"updated_at"`
}

type TaskLog struct {
	ID        uuid.UUID   `json:"id"`
	TaskID    uuid.UUID   `json:"task_id"`
	WorkerID  pgtype.Text `json:"worker_id"`
	Status    string      `json:"status"`
	Message   pgtype.Text `json:"message"`
	CreatedAt time.Time   `json:"created_at"`
}

type User struct {
	ID        uuid.UUID `json:"id"`
	Name      string    `json:"name"`
	Email     string    `json:"email"`
	Password  string    `json:"password"`
	Role      string    `json:"role"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}
